// Code generated by mockery v2.32.4. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// CIfc is an autogenerated mock type for the CIfc type
type CIfc struct {
	mock.Mock
}

// Sub provides a mock function with given fields: _a0, _a1
func (_m *CIfc) Sub(_a0 int, _a1 int) int {
	ret := _m.Called(_a0, _a1)

	var r0 int
	if rf, ok := ret.Get(0).(func(int, int) int); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// NewCIfc creates a new instance of CIfc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCIfc(t interface {
	mock.TestingT
	Cleanup(func())
}) *CIfc {
	mock := &CIfc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
